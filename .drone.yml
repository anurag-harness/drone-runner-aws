kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: golang:1
    commands:
      - CGO_ENABLED=1 go build -ldflags "-extldflags \"-static\"" -o release/linux/amd64/drone-runner-aws
    volumes:
      - name: cache
        path: /root/.cache/go-build
    depends_on:
      - clone
  - name: go vet and unit tests
    image: golang:1
    commands:
      - go vet ./...
      - go test -cover ./...
    volumes:
      - name: cache
        path: /root/.cache/go-build
    depends_on:
      - build
  - name: golangci-lint
    image: golangci/golangci-lint
    commands:
      - golangci-lint run --timeout 500s
    volumes:
      - name: cache
        path: /root/.cache/go-build
    depends_on:
      - build
  - name: compiler checks
    image: golang:1
    commands:
      - release/linux/amd64/drone-runner-aws compile --source='./test_files/compiler/drone_ubuntu.yml' test_files/compiler/drone_pool.yml
      - release/linux/amd64/drone-runner-aws compile --source='./test_files/compiler/drone_windows.yml' test_files/compiler/drone_pool.yml
    depends_on:
      - build
  - name: exec checks
    image: golang:1
    commands:
      - DRONE_MAX_POOL_SIZE=1 DRONE_RPC_HOST=not_used DRONE_RPC_SECRET=not_used release/linux/amd64/drone-runner-aws exec test_files/compiler/drone_ubuntu.yml --debug --trace --repo-http='https://github.com/tphoney/bash_plugin' --repo-branch='main' --commit-target='main' --commit-after='7e5f437589cdf071769158ce219b2f443ca13074'
    environment:
      DRONE_AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      DRONE_AWS_ACCESS_KEY_SECRET:
        from_secret: aws_secret_access_key
    depends_on:
      - compiler checks
    when:
      event:
        exclude:
          - pull_request

  - name: publish
    image: plugins/docker
    pull: if-not-exists
    settings:
      repo: drone/drone-runner-aws
      auto_tag: true
      auto_tag_suffix: linux-amd64
      dockerfile: docker/Dockerfile.linux.amd64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      ref:
        - refs/heads/master
        - refs/tags/*
    depends_on:
      - compiler checks
      - exec checks

volumes:
  - name: cache
    temp: {}

---
kind: pipeline
type: amazon
name: build and publish mac intel binaries

node:
  cluster: mac

pool:
  use: osx

steps:
  - name: build
    commands:
      - brew install golang
      - CGO_ENABLED=1 go build -o drone-runner-aws-darwin-amd64
  - name: release
    image: plugins/github-release
    settings:
      files:
        - drone-runner-aws-darwin-amd64
      api_key:
        from_secret: github_token

depends_on:
  - default
trigger:
  ref:
    - refs/tags/*

---
kind: pipeline
type: docker
name: manifest

steps:
  - name: manifest
    image: plugins/manifest
    settings:
      spec: docker/manifest.tmpl
      auto_tag: true
      ignore_missing: true
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username

depends_on:
  - default
trigger:
  ref:
    - refs/heads/master
    - refs/tags/*
